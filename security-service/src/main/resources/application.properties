#Port
server.port=${SECURITY_SERVER_PORT:1006}
#ApplicationName
spring.application.name=SECURITY-SERVICE
#Eureka
eureka.client.service-url.defaultZone=http://${SECURITY_EUREKA_HOST:localhost}:${SECURITY_EUREKA_PORT:8761}/eureka/
#Eureka log
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN
#PostgreSQL
spring.datasource.url=jdbc:postgresql://${SECURITY_POSTGRES_HOST:localhost}:${SECURITY_POSTGRES_PORT:5433}/${SECURITY_POSTGRES_DB:user}
spring.datasource.username=${SECURITY_POSTGRES_USER:root}
spring.datasource.password=${SECURITY_POSTGRES_PASSWORD:password}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.connection.charSet=UTF-8

#Kafka
spring.kafka.bootstrap-servers=${SECURITY_KAFKA_HOST:localhost:9092}
#Key-Value Serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#Kafka log
logging.level.org.apache.kafka.clients.consumer=WARN
logging.level.org.springframework.kafka=WARN

