#Port
server.port=${APPOINTMENT_SERVER_PORT:1009}
#ApplicationName
spring.application.name=APPOINTMENT-SERVICE
#Eureka
eureka.client.service-url.defaultZone=http://${APPOINTMENT_EUREKA_HOST:localhost}:${APPOINTMENT_EUREKA_PORT:8761}/eureka/
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN


#PostgreSQL
spring.datasource.url= jdbc:postgresql://${APPOINTMENT_POSTGRES_HOST:localhost}:${APPOINTMENT_POSTGRES_PORT:5437}/${APPOINTMENT_POSTGRES_DB:appointment}
spring.datasource.username= ${APPOINTMENT_POSTGRES_USER:root}
spring.datasource.password= ${APPOINTMENT_POSTGRES_PASSWORD:password}
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.connection.charSet=UTF-8


# Kafka
spring.kafka.bootstrap-servers=${APPOINTMENT_KAFKA_HOST:localhost:9092}
spring.kafka.consumer.group-id=kafka-group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*

logging.level.org.apache.kafka.clients.consumer=WARN
logging.level.org.springframework.kafka=WARN
